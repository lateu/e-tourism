{"version":3,"sources":["logo.svg","components/Counter.js","components/HitItem.js","components/SearchForm.js","components/Gallery.js","components/About.js","components/HitDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Counter","props","compute","op","sign","temp","state","count","setState","list","Array","fill","className","this","title","onClick","map","value","index","key","src","image","alt","width","Component","HitItem","detailShow","hit","id","tags","imageWidth","imageHeight","height","webformatURL","largeImageURL","to","userImageURL","class","user","comments","downloads","likes","favorites","views","SearchForm","setKeyword","event","keyWordValue","target","doSearch","preventDefault","onSearch","onSubmit","type","placeholder","onChange","Gallery","search","keyWord","gethits","goTopage","page","currentpage","currentKeyword","hits","pageSize","totalPages","pages","url","axios","get","then","resp","data","totalHits","Math","floor","catch","error","console","log","val","About","addSkill","skill","skills","length","role","skillvalue","setSkill","onDelete","sk","skillscp","indexOf","splice","contact","name","email","profile","HitDetails","match","params","iden","replace","App","logo","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d1b799a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport default class Counter extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            count: 1,\n            list: [0]\n        }\n\n    }\n    // exceute base on the buton cliked by user\n    compute = (op) => {\n\n        let sign = op === \"+\" ? 1 : -1;\n        let temp = this.state.count + sign;\n        if (temp >= 0)\n            this.setState(\n                {\n                    count: this.state.count + sign,\n                    list: new Array(temp).fill()\n                });\n\n\n\n    };\n\n    render() {\n        return (\n            <div className=\"card m-3\">\n                <div className=\"card-header\"><strong>{this.props.title ? this.props.title : \"default title\"} : {this.state.count}</strong></div>\n                <div className=\"ml-auto\">\n                    <button onClick={() => this.compute(\"+\")} className=\"btn btn-primary m-2\">+</button>\n                    <button onClick={() => this.compute(\"-\")} className=\"btn btn-danger m-2\">-</button>\n                </div>\n                <div className=\"card-body\">\n\n                    {\n                        this.state.list.map((value, index) =>\n\n                            <span key={index}>\n                                <img src={this.props.image ? this.props.image : \"images/cat.jpeg\"} alt=\"Img\" width=\"100\" className=\"m-2\" />\n                            </span>\n\n                        )\n                    }\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Link, } from 'react-router-dom';\n\nexport default class HitItem extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    // return hit element details to show\n\n    render() {\n        return (\n            <div className={this.props.detailShow === false ? \"col-md-4 mt-2\" : \"container\"} key={this.props.hit.id}>\n                <div className=\"card\">\n                    <div className=\"card-header\">{this.props.hit.tags} | {this.props.detailShow === true ? this.props.hit.imageWidth + \"X\" + this.props.hit.imageHeight : \"\"}</div>\n\n\n                    <div className=\"card-body\">\n                        {(this.props.detailShow === false) ? <img height=\"200\" src={this.props.hit.webformatURL} className=\"card-img\" /> :\n                            <img src={this.props.hit.largeImageURL} className=\"card-img\" />\n                        }\n\n                    </div>\n\n\n                    {this.props.detailShow === false ?\n                        <div >\n                            <Link to={'/details/id=' + this.props.hit.id} className=\"btn btn-success mb-2\">hit details</Link>\n                        </div> :\n                        <div>\n                            <div className=\"row\">\n                                <div className=\"col-auto\">\n                                    <img src={this.props.hit.userImageURL} className=\"img-thumbnail\" />\n                                    <p><i class=\"fa fa-user\">: {this.props.hit.user}</i></p>\n                                </div>\n                                <div>\n                                    <ul className=\"nav nav-pills\">\n                                        <li className=\"list-group-item\"> <i class=\"fa fa-comment\">:{this.props.hit.comments}</i></li>\n                                        <li className=\"list-group-item\"> <i class=\"fa fa-download\">:{this.props.hit.downloads}</i></li>\n                                        <li className=\"list-group-item\"> <i class=\"fa fa-thumbs-up\">:{this.props.hit.likes}</i></li>\n                                        <li className=\"list-group-item\"> <i class=\"fa fa-heart\">:{this.props.hit.favorites}</i></li>\n                                        <li className=\"list-group-item\"> <i class=\"fa fa-eye\">:{this.props.hit.views}</i></li>\n\n\n                                    </ul>\n                                </div>\n\n                            </div>\n                            <div> <Link to=\"/gallery\" className=\"btn btn-primary\">Home</Link>   </div>\n\n                        </div>\n                    }\n\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\n\n\n\nexport default class SearchForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \"keyWordValue\": \"paris\" }\n\n    }\n\n    //update the state with de provided keyword\n    setKeyword = (event) => {\n        this.setState({\n            keyWordValue: event.target.value\n        })\n    }\n\n    doSearch = (event) => {\n        event.preventDefault();\n        this.props.onSearch(this.state.keyWordValue)\n        //this.gethits();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.doSearch}>\n                <div className=\"row m-2 p-2\">\n                    <div className=\"col\">\n                        <input type='text' value={this.state.keyWordValue} placeholder=\"search criteria\" className=\"form-control\" onChange={this.setKeyword}></input>\n\n                    </div>\n                    <div className=\"col-auto\"><button type=\"submit\" className=\"btn btn-primary\">Search</button></div>\n\n                </div>\n            </form>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport HitItem from \"./HitItem\";\nimport SearchForm from \"./SearchForm\";\n\nexport default class Gallery extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = ({\n            hits: [],\n            currentpage: 1,\n            pageSize: 10,\n            currentKeyword: \"paris\",\n            totalPages: 1,\n            pages: []\n\n        })\n    }\n\n\n\n    componentDidMount() {\n        this.gethits(this.state.currentKeyword);\n    }\n\n    //return hit base on the provided city\n    gethits(keyWord) {\n\n        let url = \"https://pixabay.com/api/?key=18328524-4d59f925588561173524be16f&q=\" +\n            keyWord + \"&page=\" + this.state.currentpage +\n            \"&per_page=\" + this.state.pageSize;\n\n        axios.get(url).then((resp) => {\n            let tp = resp.data.totalHits % this.state.pageSize;\n            let totalPages = tp === 0 ? resp.data.totalHits / this.state.pageSize : 1 + Math.floor((resp.data.totalHits / this.state.pageSize));\n            this.setState({\n                hits: resp.data.hits,\n                totalPages: totalPages,\n                pages: new Array(totalPages).fill(0),\n                currentKeyword: keyWord\n            })\n            //console.log(\"/////////////////\")\n            //console.log(resp)\n        }).catch((error) => {\n            console.log(console.error)\n        })\n    }\n\n\n    // search a hit of the city\n    //Search = (event) => {\n    search = (keyWord) => {\n        //event.preventDefault();\n\n        this.gethits(keyWord);\n    }\n\n    //return the page requested by user\n    goTopage = (page) => {\n        this.setState({\n            currentpage: page,\n        }, () => {\n            this.gethits(this.state.currentKeyword)\n        })\n\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <strong>Gallery Component:{this.state.currentKeyword}</strong>\n                <SearchForm onSearch={this.search} />\n                <div className=\"row\">\n                    {\n\n                        this.state.hits.map(hit =>\n\n                            <HitItem hit={hit} key={hit.id} detailShow={false} />\n\n                        )\n\n\n                    }\n                </div>\n                <br />\n                <div className=\"row\">\n                    <ul className=\"nav nav-pills\">\n                        {\n                            this.state.pages.map((val, index) =>\n                                <li key={index}>\n                                    <button onClick={() => this.goTopage(index + 1)} className={this.state.currentpage === index + 1 ? \"btn btn-success\" : \"btn btn-link\"}> {index + 1}</button>\n\n                                </li>\n                            )\n                        }\n\n                    </ul>\n\n                </div>\n\n            </div>\n        )\n    }\n\n}","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            \"title\": \"About me\",\n            contact: { name: \"Richard Lateu\", email: \"richardlateu@gmail.com\", role: \"software engineer\", profile: \"images/cat.jpeg\" },\n            skills: [\n                { id: 1, role: \"software development\" },\n                { id: 2, role: \"software design\" },\n                { id: 5, role: \"software team leading\" },\n                { id: 6, role: \"software architecture\" },\n            ],\n            skillvalue: '',\n\n\n        }\n        // this.delta = this.delta.bind(this);\n\n    }\n\n    addSkill = (event) => {\n        //alert('A name was submitted: ' + this.state.skillvalue);\n        event.preventDefault();\n\n        let skill = {\n            id: this.state.skills.length + 1,\n            role: this.state.skillvalue\n        }\n\n        this.setState({\n            skills: [...this.state.skills, skill]\n        })\n\n        console.log(\"/////////////////////////////////////\")\n        console.log(this.state.skills)\n    };\n\n    setSkill = (event) => {\n        //event.preventDefault();\n        this.setState({ skillvalue: event.target.value })\n\n    }\n    onDelete = (sk) => {\n\n        let skillscp = [...this.state.skills]\n        let index = skillscp.indexOf(sk)\n        skillscp.splice(index, 1)\n\n        this.setState({\n            skills: skillscp\n        })\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <p>{this.state.skillvalue}</p>\n                <div className=\"card-header\"><strong>{this.state.title}</strong></div>\n                <div className=\"row\">\n                    <div className=\"col col-auto\"><img width={220} src={this.state.contact.profile} alt=\"\" /></div>\n                    <div className=\"col \">\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">{this.state.contact.name}</li>\n                            <li className=\"list-group-item\">{this.state.contact.role}</li>\n                            <li className=\"list-group-item\">{this.state.contact.email}</li>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"card\">\n                    <div className=\"card-header\">Skills</div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.addSkill}>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <input type=\"text\" name=\"skill\"\n                                        className=\"col\"\n                                        placeholder=\"add new skill\"\n                                        value={this.props.skillvalue}\n                                        onChange={this.setSkill} />\n                                </div>\n                                <div className=\"col col-auto\">\n                                    <button className=\"btn btn-primary\" type=\"submit\">Add</button>\n                                </div>\n                            </div>\n                        </form>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Skill</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n\n                                {this.state.skills.map((sk, index) =>\n                                    <tr key={index}>\n                                        <td>{sk.id}</td>\n                                        <td className=\"text-align-center\">{sk.role}</td>\n                                        <td><button className=\"btn btn-danger\" name=\"X\" onClick={() => this.onDelete(sk)}>X</button></td>\n                                    </tr>\n\n                                )}\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n\n\n}","import React, { Component } from 'react';\nimport HitItem from './HitItem';\nimport axios from 'axios';\n\nexport default class HitDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = ({\n            hit: null\n        })\n\n    }\n\n\n    //preload the hits list\n    componentDidMount() {\n        this.gethits(this.props.match.params.id)\n    }\n\n    // return the hit base on a given id\n    gethits(iden) {\n        let id = iden.replace('id=', \"\")\n        let url = \"https://pixabay.com/api/?key=18328524-4d59f925588561173524be16f&id=\" +\n            id\n\n        axios.get(url).then((resp) => {\n            this.setState({\n                hit: resp.data.hits[0],\n            })\n            console.log(\"/////////id////////\")\n            console.log(id)\n        }).catch((error) => {\n            console.log(console.error)\n        })\n    }\n\n    render() {\n        if (this.state.hit != null) {\n            return (\n                <HitItem hit={this.state.hit} detailShow={true} />\n            )\n        } else {\n            return <div> Nothing found</div>\n        }\n    }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Counter from './components/Counter';\nimport { Route, Switch, BrowserRouter as Router, Link, } from 'react-router-dom';\nimport Gallery from './components/Gallery';\nimport About from './components/About';\nimport HitDetails from './components/HitDetails';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <Router>\n        <nav className=\"navbar navbar-expand navbar-brand \">\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/home\">Home </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/counter\">Counter</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/gallery\">Gallery</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/details/:id\">details-route</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/home\"></Route>\n            <Route path=\"/counter\" component={Counter}></Route>\n            <Route path=\"/gallery\" component={Gallery}></Route>\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/details/:id\" component={HitDetails}></Route>\n          </Switch>\n        </div>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}